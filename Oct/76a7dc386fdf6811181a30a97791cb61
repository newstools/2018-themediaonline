I did my sums the other day and realised I’ve been writing software for 40 years. That’s a lot of code. It’s a lot of years too, but let’s not dwell on that! What does a career spanning 40 years look like? Can one remain relevant in such a fast changing field over such a long time? The answer is a resounding ‘Yes’. Software doesn’t exist in a vacuum but is a tool for solving business, social and technical problems. Most of my experience is firmly business related, and I’ve been involved in education, engineering, construction, health, accounting, insurance, entertainment, retail and many more sectors over the past four decades. That grounding in business is invaluable and I use my experience every day to solve current problems. The technical side has changed hugely, but an amazing thing about my career is how much fun I’m still having. I’ve managed to blend management and leadership roles with lots of hands-on, in-the-trenches, software development. I almost fell out of development about 10 years ago, when a management role pushed me away from code. That’s a common story for people in tech who get promoted out of the role that they’re good at, and up into management. Well, in some direction into management – maybe it’s not really “up”. Luckily, I could claw my way back to the code front with a lot of hard work. Tech moves fast, and a few years away leaves you with a lot of catching up to do. It helps that I love tech and suck at management, so my priorities were well aligned. I can’t really remember all the coding languages I’ve been proficient in, but it’s well over 20. My first code was in a teaching language called SAMOS that was loosely based on Assembler. That was in 1978, and we coded with pencil on paper. I still have an affinity for sketching out my design approach on paper, and value the early training that taught me to plan my code on paper. By 1980, I was writing COBOL. We still used coding sheets, which had to be sent to the typists who would type our instructions in to create punch cards. You’d wait your turn for computing time. Any errors on your punch cards, and you’d have to start all over again with new cards. I mention all this for background only. There’s nothing nostalgic about those days, except for the almost palpable air of possibility and excitement that we all felt being a software developer in the formative years of Computer Science. I wasn’t unusual being a woman in tech so long ago. There were plenty of us – at least double the numbers we have now in 2018, where the numbers of women in tech have dwindled to under 20%. Commodore Grace M. Hopper, USN/Wikipedia. Women made important contributions to early software development, and I’m so pleased that movies like Hidden Figures have helped to raise awareness around women’s role in tech. I’m still in awe of intellectual giants like Commander Grace Hopper, who invented the compiler and drove the development of COBOL, and Margaret Hamilton who was Tech Lead on the Apollo Mission software. And many more. By 1984 the IBM PC was released, and software development was moving to the desktop. I’d owned a Kaypro II for a few years by then. This had all of 64kb RAM, a handle on the top of it that made it a “luggable”, and I loved it dearly. I wrote reams of horrid Basic code for it, including an early custom Word Processor. This new era promised so much, and I was more than ready to jump ship from COBOL and join the new personal computing revolution. My day job was as a senior developer in a 4GL language, still working on mainframes. Like many of my peers, I started doing side projects on the PC. When my boss promoted a much less capable bloke ahead of me for a senior position, I decided it was time to ditch permanent employment. I told my boss I was much too busy to work for him if he didn’t appreciate my skills and took the leap into entrepreneurship. There’s a side note to this story, in that I was only 24 at the time and maybe my boss was justified in thinking that I was too young for the senior position. My over-confidence may have been a problem in corporate employment but turned out to be just right for entrepreneurship. That was in 1987, and the company I founded with partner Steve Mabbutt turned 31 this year. There’s lots of really interesting stories to tell between 1987 and now, and I hope you’ll follow my column on The Media Online as I explore the stories, people and tech that interest me each month.  Lorraine Steyn founded Khanyisa Real Systems (KRS) in 1987, at the age of 24. She has continued to grow KRS since then, and now has over 50 technical staff in Cape Town and Gauteng. Steyn was the first woman outside of America to be a Delphi Certified Developer, and has continued to stay abreast of new technology even as the business grew. Want to continue this conversation on The Media Online platforms? Comment on Twitter @MediaTMO or on our Facebook page. Send us your suggestions, comments, contributions or tip-offs via e-mail to glenda@wagthedog.co.za or michael@wagthedog.co.za